## Scope
1. input: decklist downloaded from moxfield
2. output: can this card win with Now I Know My ABC's
3. additional output: provide a list of the minimum number of cards it takes to win, and what those cards are.


## Win Conditions:
At the beginning of your upkeep, if you control permanents with names that include all twenty-six letters of the English alphabet, you win the game.

## Todo
[ ] - Create a way to use any file to test ABCs
[ ] - Process each line individually



## Notes

1. Compare hashsets of decklist (filter all alphabetical and down to lowercase) and ABCs.
    - filter numbers out
    - filter "Sideboard:" out


2. if match, then decklist can be done

3. May have to process file differently than hashsets


If using a string result of process file, it probably won't allow for a clean check of which letters you have
But to check if the thing can be done at all, it's faster to check with hashset before doing anything computationally intensive.



Capturing text without numbers (will need to handle "Sideboard:", maybe if text = "SIDEBOARD:" then do not include it in array)
````Java
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class TextCapture {
    public static void main(String[] args) {
        try {
            File file = new File("yourfile.txt");
            Scanner scanner = new Scanner(file);

            while (scanner.hasNextLine()) {
                // Read the number first (discard it)
                if (scanner.hasNextInt()) {
                    scanner.nextInt(); // skip number
                }

                // Read the rest of the line
                if (scanner.hasNextLine()) {
                    String line = scanner.nextLine().trim(); // trims leading space
                    System.out.println(line); // Do what you want with this
                }
            }

            scanner.close();
        } catch (FileNotFoundException e) {
            System.out.println("File not found.");
            e.printStackTrace();
        }
    }
}
````